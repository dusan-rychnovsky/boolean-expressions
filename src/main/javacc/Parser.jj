
options {
  STATIC = false;
}

PARSER_BEGIN(Parser)
  package cz.dusanrychnovsky.booleanexpressions;

  import java.io.*;
  import static java.nio.charset.StandardCharsets.UTF_8;

  public class Parser {

    public Parser() {
      this(new StringReader(""));
    }

    public Expression parseExpression(InputStream in) throws ParseException {
      ReInit(in);
      return Start();
    }

    public Expression parseExpression(String str) throws ParseException {
      return parseExpression(new ByteArrayInputStream(str.getBytes(UTF_8)));
    }
  }
PARSER_END(Parser)

SKIP : { " " }
TOKEN : { < EQ : "=" > }
TOKEN : { < CINT : (["0"-"9"])+ > }

Expression Start():
{
  Token t;
}
{
  t = <CINT>
  { int left = Integer.parseInt(t.image); }

  <EQ>

  t = <CINT>
  { int right = Integer.parseInt(t.image); }

  { return new Eq<Integer>(new Const<Integer>(left), new Const<Integer>(right)); }
}
